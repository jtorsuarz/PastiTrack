// Mocks generated by Mockito 5.4.4 from annotations
// in pasti_track/test/unit_tests/events/domain/usecases/get_pending_events_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pasti_track/features/events/data/datasources/event_local_datasource.dart'
    as _i2;
import 'package:pasti_track/features/events/data/datasources/event_remote_datasource.dart'
    as _i3;
import 'package:pasti_track/features/events/data/repositories/event_repository_impl.dart'
    as _i4;
import 'package:pasti_track/features/events/domain/entities/event_entity.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEventLocalDataSource_0 extends _i1.SmartFake
    implements _i2.EventLocalDataSource {
  _FakeEventLocalDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventRemoteDataSource_1 extends _i1.SmartFake
    implements _i3.EventRemoteDataSource {
  _FakeEventRemoteDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventRepositoryImpl extends _i1.Mock
    implements _i4.EventRepositoryImpl {
  MockEventRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EventLocalDataSource get localDB => (super.noSuchMethod(
        Invocation.getter(#localDB),
        returnValue: _FakeEventLocalDataSource_0(
          this,
          Invocation.getter(#localDB),
        ),
      ) as _i2.EventLocalDataSource);

  @override
  _i3.EventRemoteDataSource get remoteDB => (super.noSuchMethod(
        Invocation.getter(#remoteDB),
        returnValue: _FakeEventRemoteDataSource_1(
          this,
          Invocation.getter(#remoteDB),
        ),
      ) as _i3.EventRemoteDataSource);

  @override
  _i5.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<_i6.EventEntity>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.EventEntity>>.value(<_i6.EventEntity>[]),
      ) as _i5.Future<List<_i6.EventEntity>>);

  @override
  _i5.Future<void> add(_i6.EventEntity? event) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> delete(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [eventId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteByRoutine(String? routineId) => (super.noSuchMethod(
        Invocation.method(
          #deleteByRoutine,
          [routineId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> update(_i6.EventEntity? event) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [event],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> updateStatusEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #updateStatusEvent,
          [eventId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<_i6.EventEntity>> getAllByRoutine(String? routineId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllByRoutine,
          [routineId],
        ),
        returnValue:
            _i5.Future<List<_i6.EventEntity>>.value(<_i6.EventEntity>[]),
      ) as _i5.Future<List<_i6.EventEntity>>);

  @override
  _i5.Future<List<_i6.EventEntity>> getPendingEvents(DateTime? currentDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingEvents,
          [currentDate],
        ),
        returnValue:
            _i5.Future<List<_i6.EventEntity>>.value(<_i6.EventEntity>[]),
      ) as _i5.Future<List<_i6.EventEntity>>);

  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
